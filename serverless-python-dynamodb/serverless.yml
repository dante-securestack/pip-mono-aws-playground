app: aws-basics
service: sls-python-dynamodb

plugins:
  - serverless-localstack

provider:
  name: aws
  runtime: python3.7
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: aliases/create.create
    events:
      - http:
          path: aliases
          method: post
          cors: true
  list:
    handler: aliases/list.list
    events:
      - http:
          path: aliases
          method: get
  delete:
    handler: aliases/delete.delete
    events:
      - http:
          path: aliases/{alias}
          method: delete
          cors: true

custom:
  localstack:
    stages:
      - local
    host: http://localhost
    edgePort: 4566
    autostart: False
    lambda:
      mountCode: False
    docker:
      sudo: False

resources:
  Resources:
    DynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: alias
            AttributeType: S
        KeySchema:
          - AttributeName: alias
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
